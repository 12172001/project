<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>OperationalError
          at /admin/login/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('table.vars'));
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>OperationalError
       at /admin/login/</h1>
  <pre class="exception_value">no such table: auth_user</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://127.0.0.1:8000/admin/login/?next=/admin/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>3.1.2</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>OperationalError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>no such table: auth_user</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/sqlite3/base.py</span>, line 413, in execute</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.6.9</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/khanisa/Django01/debut_project/locallibrary/locallibrary&#x27;,
 &#x27;/usr/lib/python36.zip&#x27;,
 &#x27;/usr/lib/python3.6&#x27;,
 &#x27;/usr/lib/python3.6/lib-dynload&#x27;,
 &#x27;/home/khanisa/.local/lib/python3.6/site-packages&#x27;,
 &#x27;/usr/local/lib/python3.6/dist-packages&#x27;,
 &#x27;/usr/lib/python3/dist-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 07 Nov 2020 17:28:26 +0600</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py</code>, line 84, in _execute

          
            <div class="context" id="c139756763593352">
              
                <ol start="77" class="pre-context" id="pre139756763593352">
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="84" class="context-line">
                <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>                return self.cursor.execute(sql, params)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='85' class="post-context" id="post139756763593352">
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>        with self.db.wrap_database_errors:</pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>            return self.cursor.executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756763593352')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756763593352">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;django.db.backends.sqlite3.base.DatabaseWrapper object at 0x7f1ba85509e8&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;12172001&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password&quot;, &quot;auth_user&quot;.&quot;last_login&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_superuser&quot;, &quot;auth_user&quot;.&quot;username&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;first_name&quot;, &quot;auth_user&quot;.&quot;last_name&quot;, &quot;auth_user&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_staff&quot;, &quot;auth_user&quot;.&quot;is_active&quot;, &quot;auth_user&quot;.&quot;date_joined&quot; &#x27;
 &#x27;FROM &quot;auth_user&quot; WHERE &quot;auth_user&quot;.&quot;username&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/sqlite3/base.py</code>, line 413, in execute

          
            <div class="context" id="c139756763875784">
              
                <ol start="406" class="pre-context" id="pre139756763875784">
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    This fixes it -- but note that if you want to use a literal &quot;%s&quot; in a query,</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    you&#x27;ll need to use &quot;%%s&quot;.</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    def execute(self, query, params=None):</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        if params is None:</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>            return Database.Cursor.execute(self, query)</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        query = self.convert_query(query)</pre></li>
                
                </ol>
              
              <ol start="413" class="context-line">
                <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        return Database.Cursor.execute(self, query, params)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='414' class="post-context" id="post139756763875784">
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    def executemany(self, query, param_list):</pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        query = self.convert_query(query)</pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        return Database.Cursor.executemany(self, query, param_list)</pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    def convert_query(self, query):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756763875784')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756763875784">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;12172001&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password&quot;, &quot;auth_user&quot;.&quot;last_login&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_superuser&quot;, &quot;auth_user&quot;.&quot;username&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;first_name&quot;, &quot;auth_user&quot;.&quot;last_name&quot;, &quot;auth_user&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_staff&quot;, &quot;auth_user&quot;.&quot;is_active&quot;, &quot;auth_user&quot;.&quot;date_joined&quot; &#x27;
 &#x27;FROM &quot;auth_user&quot; WHERE &quot;auth_user&quot;.&quot;username&quot; = ? LIMIT 21&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x7f1ba844eb88&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
          <li><h3>
          
            The above exception (no such table: auth_user) was the direct cause of the following exception:
          
        </h3></li>
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/core/handlers/exception.py</code>, line 47, in inner

          
            <div class="context" id="c139756760500936">
              
                <ol start="40" class="pre-context" id="pre139756760500936">
                
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>                response = await sync_to_async(response_for_exception)(request, exc)</pre></li>
                
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>            return response</pre></li>
                
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="47" class="context-line">
                <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>                response = get_response(request)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='48' class="post-context" id="post139756760500936">
                  
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760500936', 'post139756760500936')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500936')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500936">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>OperationalError(&#x27;no such table: auth_user&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f1ba91f87f0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/core/handlers/base.py</code>, line 179, in _get_response

          
            <div class="context" id="c139756760500424">
              
                <ol start="172" class="pre-context" id="pre139756760500424">
                
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="179" class="context-line">
                <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='180' class="post-context" id="post139756760500424">
                  
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760500424', 'post139756760500424')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500424')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500424">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;bound method AdminSite.login of &lt;django.contrib.admin.sites.AdminSite object at 0x7f1bad0552b0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7f1ba8902240&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f1ba91f87f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;bound method AdminSite.login of &lt;django.contrib.admin.sites.AdminSite object at 0x7f1bad0552b0&gt;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/views/decorators/cache.py</code>, line 44, in _wrapped_view_func

          
            <div class="context" id="c139756760500296">
              
                <ol start="37" class="pre-context" id="pre139756760500296">
                
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>def never_cache(view_func):</pre></li>
                
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>    Decorator that adds headers to a response so that it will never be cached.</pre></li>
                
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>    def _wrapped_view_func(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="44" class="context-line">
                <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>        response = view_func(request, *args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='45' class="post-context" id="post139756760500296">
                  
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>        add_never_cache_headers(response)</pre></li>
                  
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre139756760500296', 'post139756760500296')"><pre>    return _wrapped_view_func</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500296')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500296">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;django.contrib.admin.sites.AdminSite object at 0x7f1bad0552b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function AdminSite.login at 0x7f1ba9ad9e18&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/admin/sites.py</code>, line 410, in login

          
            <div class="context" id="c139756760501064">
              
                <ol start="403" class="pre-context" id="pre139756760501064">
                
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>        defaults = {</pre></li>
                
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>            &#x27;extra_context&#x27;: context,</pre></li>
                
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>            &#x27;authentication_form&#x27;: self.login_form or AdminAuthenticationForm,</pre></li>
                
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>            &#x27;template_name&#x27;: self.login_template or &#x27;admin/login.html&#x27;,</pre></li>
                
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>        }</pre></li>
                
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>        request.current_app = self.name</pre></li>
                
                </ol>
              
              <ol start="410" class="context-line">
                <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>        return LoginView.as_view(**defaults)(request)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='411' class="post-context" id="post139756760501064">
                  
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>    def _build_app_dict(self, request, label=None):</pre></li>
                  
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>        Build the app dictionary. The optional `label` parameter filters models</pre></li>
                  
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>        of a specific app.</pre></li>
                  
                  <li onclick="toggle('pre139756760501064', 'post139756760501064')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760501064')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760501064">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>AdminAuthenticationForm</td>
                    <td class="code"><pre>&lt;class &#x27;django.contrib.admin.forms.AdminAuthenticationForm&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>LoginView</td>
                    <td class="code"><pre>&lt;class &#x27;django.contrib.auth.views.LoginView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;app_path&#x27;: &#x27;/admin/login/?next=/admin/&#x27;,
 &#x27;available_apps&#x27;: [],
 &#x27;has_permission&#x27;: False,
 &#x27;is_nav_sidebar_enabled&#x27;: True,
 &#x27;is_popup&#x27;: False,
 &#x27;site_header&#x27;: &#x27;Django administration&#x27;,
 &#x27;site_title&#x27;: &#x27;Django site admin&#x27;,
 &#x27;site_url&#x27;: &#x27;/&#x27;,
 &#x27;title&#x27;: &#x27;Log in&#x27;,
 &#x27;username&#x27;: &#x27;&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>defaults</td>
                    <td class="code"><pre>{&#x27;authentication_form&#x27;: &lt;class &#x27;django.contrib.admin.forms.AdminAuthenticationForm&#x27;&gt;,
 &#x27;extra_context&#x27;: {&#x27;app_path&#x27;: &#x27;/admin/login/?next=/admin/&#x27;,
                   &#x27;available_apps&#x27;: [],
                   &#x27;has_permission&#x27;: False,
                   &#x27;is_nav_sidebar_enabled&#x27;: True,
                   &#x27;is_popup&#x27;: False,
                   &#x27;site_header&#x27;: &#x27;Django administration&#x27;,
                   &#x27;site_title&#x27;: &#x27;Django site admin&#x27;,
                   &#x27;site_url&#x27;: &#x27;/&#x27;,
                   &#x27;title&#x27;: &#x27;Log in&#x27;,
                   &#x27;username&#x27;: &#x27;&#x27;},
 &#x27;template_name&#x27;: &#x27;admin/login.html&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>extra_context</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.admin.sites.AdminSite object at 0x7f1bad0552b0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/views/generic/base.py</code>, line 70, in view

          
            <div class="context" id="c139756760500360">
              
                <ol start="63" class="pre-context" id="pre139756760500360">
                
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>
                
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="70" class="context-line">
                <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='71' class="post-context" id="post139756760500360">
                  
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre139756760500360', 'post139756760500360')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500360')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500360">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;django.contrib.auth.views.LoginView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{&#x27;authentication_form&#x27;: &lt;class &#x27;django.contrib.admin.forms.AdminAuthenticationForm&#x27;&gt;,
 &#x27;extra_context&#x27;: {&#x27;app_path&#x27;: &#x27;/admin/login/?next=/admin/&#x27;,
                   &#x27;available_apps&#x27;: [],
                   &#x27;has_permission&#x27;: False,
                   &#x27;is_nav_sidebar_enabled&#x27;: True,
                   &#x27;is_popup&#x27;: False,
                   &#x27;site_header&#x27;: &#x27;Django administration&#x27;,
                   &#x27;site_title&#x27;: &#x27;Django site admin&#x27;,
                   &#x27;site_url&#x27;: &#x27;/&#x27;,
                   &#x27;title&#x27;: &#x27;Log in&#x27;,
                   &#x27;username&#x27;: &#x27;&#x27;},
 &#x27;template_name&#x27;: &#x27;admin/login.html&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/utils/decorators.py</code>, line 43, in _wrapper

          
            <div class="context" id="c139756760500808">
              
                <ol start="36" class="pre-context" id="pre139756760500808">
                
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>        # bound_method has the signature that &#x27;decorator&#x27; expects i.e. no</pre></li>
                
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>        # &#x27;self&#x27; argument, but it&#x27;s a closure over self so it can call</pre></li>
                
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>        # &#x27;func&#x27;. Also, wrap method.__get__() in a function because new</pre></li>
                
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>        # attributes can&#x27;t be set on bound method objects, only on functions.</pre></li>
                
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>        bound_method = partial(method.__get__(self, type(self)))</pre></li>
                
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>        for dec in decorators:</pre></li>
                
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>            bound_method = dec(bound_method)</pre></li>
                
                </ol>
              
              <ol start="43" class="context-line">
                <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>        return bound_method(*args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='44' class="post-context" id="post139756760500808">
                  
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>    # Copy any attributes that a decorator adds to the function it decorates.</pre></li>
                  
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>    for dec in decorators:</pre></li>
                  
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>        _update_method_wrapper(_wrapper, dec)</pre></li>
                  
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>    # Preserve any existing attributes of &#x27;method&#x27;, including the name.</pre></li>
                  
                  <li onclick="toggle('pre139756760500808', 'post139756760500808')"><pre>    update_wrapper(_wrapper, method)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500808')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500808">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>bound_method</td>
                    <td class="code"><pre>&lt;function sensitive_post_parameters.&lt;locals&gt;.decorator.&lt;locals&gt;.sensitive_post_parameters_wrapper at 0x7f1ba8359ae8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dec</td>
                    <td class="code"><pre>&lt;function sensitive_post_parameters.&lt;locals&gt;.decorator at 0x7f1ba8604598&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>decorators</td>
                    <td class="code"><pre>[&lt;function sensitive_post_parameters.&lt;locals&gt;.decorator at 0x7f1ba8604598&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&lt;function LoginView.dispatch at 0x7f1ba8853bf8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/views/decorators/debug.py</code>, line 89, in sensitive_post_parameters_wrapper

          
            <div class="context" id="c139756760499208">
              
                <ol start="82" class="pre-context" id="pre139756760499208">
                
                  <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>                &quot;If you are decorating a classmethod, be sure to use &quot;</pre></li>
                
                  <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>                &quot;@method_decorator.&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>            )</pre></li>
                
                  <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>            if parameters:</pre></li>
                
                  <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>                request.sensitive_post_parameters = parameters</pre></li>
                
                  <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>                request.sensitive_post_parameters = &#x27;__ALL__&#x27;</pre></li>
                
                </ol>
              
              <ol start="89" class="context-line">
                <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>            return view(request, *args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='90' class="post-context" id="post139756760499208">
                  
                  <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>        return sensitive_post_parameters_wrapper</pre></li>
                  
                  <li onclick="toggle('pre139756760499208', 'post139756760499208')"><pre>    return decorator</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760499208')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760499208">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>parameters</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view</td>
                    <td class="code"><pre>functools.partial(&lt;bound method LoginView.dispatch of &lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;&gt;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/utils/decorators.py</code>, line 43, in _wrapper

          
            <div class="context" id="c139756760500744">
              
                <ol start="36" class="pre-context" id="pre139756760500744">
                
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>        # bound_method has the signature that &#x27;decorator&#x27; expects i.e. no</pre></li>
                
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>        # &#x27;self&#x27; argument, but it&#x27;s a closure over self so it can call</pre></li>
                
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>        # &#x27;func&#x27;. Also, wrap method.__get__() in a function because new</pre></li>
                
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>        # attributes can&#x27;t be set on bound method objects, only on functions.</pre></li>
                
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>        bound_method = partial(method.__get__(self, type(self)))</pre></li>
                
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>        for dec in decorators:</pre></li>
                
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>            bound_method = dec(bound_method)</pre></li>
                
                </ol>
              
              <ol start="43" class="context-line">
                <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>        return bound_method(*args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='44' class="post-context" id="post139756760500744">
                  
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>    # Copy any attributes that a decorator adds to the function it decorates.</pre></li>
                  
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>    for dec in decorators:</pre></li>
                  
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>        _update_method_wrapper(_wrapper, dec)</pre></li>
                  
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>    # Preserve any existing attributes of &#x27;method&#x27;, including the name.</pre></li>
                  
                  <li onclick="toggle('pre139756760500744', 'post139756760500744')"><pre>    update_wrapper(_wrapper, method)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500744')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500744">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>bound_method</td>
                    <td class="code"><pre>&lt;function make_middleware_decorator.&lt;locals&gt;._make_decorator.&lt;locals&gt;._decorator.&lt;locals&gt;._wrapped_view at 0x7f1ba8359f28&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dec</td>
                    <td class="code"><pre>&lt;function make_middleware_decorator.&lt;locals&gt;._make_decorator.&lt;locals&gt;._decorator at 0x7f1ba9ab77b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>decorators</td>
                    <td class="code"><pre>[&lt;function make_middleware_decorator.&lt;locals&gt;._make_decorator.&lt;locals&gt;._decorator at 0x7f1ba9ab77b8&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&lt;function LoginView.dispatch at 0x7f1ba8853b70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/utils/decorators.py</code>, line 130, in _wrapped_view

          
            <div class="context" id="c139756760501000">
              
                <ol start="123" class="pre-context" id="pre139756760501000">
                
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                    if result is not None:</pre></li>
                
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                        return result</pre></li>
                
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                if hasattr(middleware, &#x27;process_view&#x27;):</pre></li>
                
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                    result = middleware.process_view(request, view_func, args, kwargs)</pre></li>
                
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                    if result is not None:</pre></li>
                
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                        return result</pre></li>
                
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                try:</pre></li>
                
                </ol>
              
              <ol start="130" class="context-line">
                <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                    response = view_func(request, *args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='131' class="post-context" id="post139756760501000">
                  
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                    if hasattr(middleware, &#x27;process_exception&#x27;):</pre></li>
                  
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                        result = middleware.process_exception(request, e)</pre></li>
                  
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                        if result is not None:</pre></li>
                  
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                            return result</pre></li>
                  
                  <li onclick="toggle('pre139756760501000', 'post139756760501000')"><pre>                    raise</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760501000')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760501000">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware</td>
                    <td class="code"><pre>&lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7f1ba84bf5f8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>functools.partial(&lt;bound method LoginView.dispatch of &lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;&gt;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/utils/decorators.py</code>, line 43, in _wrapper

          
            <div class="context" id="c139756760500232">
              
                <ol start="36" class="pre-context" id="pre139756760500232">
                
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>        # bound_method has the signature that &#x27;decorator&#x27; expects i.e. no</pre></li>
                
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>        # &#x27;self&#x27; argument, but it&#x27;s a closure over self so it can call</pre></li>
                
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>        # &#x27;func&#x27;. Also, wrap method.__get__() in a function because new</pre></li>
                
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>        # attributes can&#x27;t be set on bound method objects, only on functions.</pre></li>
                
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>        bound_method = partial(method.__get__(self, type(self)))</pre></li>
                
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>        for dec in decorators:</pre></li>
                
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>            bound_method = dec(bound_method)</pre></li>
                
                </ol>
              
              <ol start="43" class="context-line">
                <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>        return bound_method(*args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='44' class="post-context" id="post139756760500232">
                  
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>    # Copy any attributes that a decorator adds to the function it decorates.</pre></li>
                  
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>    for dec in decorators:</pre></li>
                  
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>        _update_method_wrapper(_wrapper, dec)</pre></li>
                  
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>    # Preserve any existing attributes of &#x27;method&#x27;, including the name.</pre></li>
                  
                  <li onclick="toggle('pre139756760500232', 'post139756760500232')"><pre>    update_wrapper(_wrapper, method)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500232')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500232">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>bound_method</td>
                    <td class="code"><pre>&lt;function never_cache.&lt;locals&gt;._wrapped_view_func at 0x7f1ba8359ea0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dec</td>
                    <td class="code"><pre>&lt;function never_cache at 0x7f1ba9ac99d8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>decorators</td>
                    <td class="code"><pre>[&lt;function never_cache at 0x7f1ba9ac99d8&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&lt;function LoginView.dispatch at 0x7f1ba8853c80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/views/decorators/cache.py</code>, line 44, in _wrapped_view_func

          
            <div class="context" id="c139756760500552">
              
                <ol start="37" class="pre-context" id="pre139756760500552">
                
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>def never_cache(view_func):</pre></li>
                
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>    Decorator that adds headers to a response so that it will never be cached.</pre></li>
                
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>    def _wrapped_view_func(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="44" class="context-line">
                <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>        response = view_func(request, *args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='45' class="post-context" id="post139756760500552">
                  
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>        add_never_cache_headers(response)</pre></li>
                  
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre139756760500552', 'post139756760500552')"><pre>    return _wrapped_view_func</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500552')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500552">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>functools.partial(&lt;bound method LoginView.dispatch of &lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;&gt;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/views.py</code>, line 63, in dispatch

          
            <div class="context" id="c139756760499784">
              
                <ol start="56" class="pre-context" id="pre139756760499784">
                
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>            redirect_to = self.get_success_url()</pre></li>
                
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>            if redirect_to == self.request.path:</pre></li>
                
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>                raise ValueError(</pre></li>
                
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>                    &quot;Redirection loop for authenticated user detected. Check that &quot;</pre></li>
                
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>                    &quot;your LOGIN_REDIRECT_URL doesn&#x27;t point to a login page.&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>            return HttpResponseRedirect(redirect_to)</pre></li>
                
                </ol>
              
              <ol start="63" class="context-line">
                <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>        return super().dispatch(request, *args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='64' class="post-context" id="post139756760499784">
                  
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>    def get_success_url(self):</pre></li>
                  
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>        url = self.get_redirect_url()</pre></li>
                  
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>        return url or resolve_url(settings.LOGIN_REDIRECT_URL)</pre></li>
                  
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760499784', 'post139756760499784')"><pre>    def get_redirect_url(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760499784')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760499784">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.contrib.auth.views.LoginView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/views/generic/base.py</code>, line 98, in dispatch

          
            <div class="context" id="c139756760499976">
              
                <ol start="91" class="pre-context" id="pre139756760499976">
                
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>        # Try to dispatch to the right method; if a method doesn&#x27;t exist,</pre></li>
                
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>        # defer to the error handler. Also defer to the error handler if the</pre></li>
                
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>        # request method isn&#x27;t on the approved list.</pre></li>
                
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>        if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>            handler = getattr(self, request.method.lower(), self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>            handler = self.http_method_not_allowed</pre></li>
                
                </ol>
              
              <ol start="98" class="context-line">
                <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>        return handler(request, *args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='99' class="post-context" id="post139756760499976">
                  
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>    def http_method_not_allowed(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>        logger.warning(</pre></li>
                  
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>            &#x27;Method Not Allowed (%s): %s&#x27;, request.method, request.path,</pre></li>
                  
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>            extra={&#x27;status_code&#x27;: 405, &#x27;request&#x27;: request}</pre></li>
                  
                  <li onclick="toggle('pre139756760499976', 'post139756760499976')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760499976')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760499976">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method ProcessFormView.post of &lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/views/generic/edit.py</code>, line 141, in post

          
            <div class="context" id="c139756760500168">
              
                <ol start="134" class="pre-context" id="pre139756760500168">
                
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>    def post(self, request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>        Handle POST requests: instantiate a form instance with the passed</pre></li>
                
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>        POST variables and then check if it&#x27;s valid.</pre></li>
                
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>        form = self.get_form()</pre></li>
                
                </ol>
              
              <ol start="141" class="context-line">
                <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>        if form.is_valid():</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='142' class="post-context" id="post139756760500168">
                  
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>            return self.form_valid(form)</pre></li>
                  
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>            return self.form_invalid(form)</pre></li>
                  
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>    # PUT is a valid HTTP verb for creating (with a known URL) or editing an</pre></li>
                  
                  <li onclick="toggle('pre139756760500168', 'post139756760500168')"><pre>    # object, note that browsers only support POST for now.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500168')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500168">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>form</td>
                    <td class="code"><pre>&lt;AdminAuthenticationForm bound=True, valid=True, fields=(username;password)&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.views.LoginView object at 0x7f1ba80f9e10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/forms/forms.py</code>, line 177, in is_valid

          
            <div class="context" id="c139756760498888">
              
                <ol start="170" class="pre-context" id="pre139756760498888">
                
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>        &quot;&quot;&quot;Return an ErrorDict for the data provided for the form.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>        if self._errors is None:</pre></li>
                
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>            self.full_clean()</pre></li>
                
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>        return self._errors</pre></li>
                
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>    def is_valid(self):</pre></li>
                
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>        &quot;&quot;&quot;Return True if the form has no errors, or False otherwise.&quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="177" class="context-line">
                <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>        return self.is_bound and not self.errors</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='178' class="post-context" id="post139756760498888">
                  
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>    def add_prefix(self, field_name):</pre></li>
                  
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>        Return the field name with a prefix appended, if this Form has a</pre></li>
                  
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre>        prefix set.</pre></li>
                  
                  <li onclick="toggle('pre139756760498888', 'post139756760498888')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760498888')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760498888">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;AdminAuthenticationForm bound=True, valid=True, fields=(username;password)&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/forms/forms.py</code>, line 172, in errors

          
            <div class="context" id="c139756760500040">
              
                <ol start="165" class="pre-context" id="pre139756760500040">
                
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>            self._bound_fields_cache[name] = field.get_bound_field(self, name)</pre></li>
                
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>        return self._bound_fields_cache[name]</pre></li>
                
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>    @property</pre></li>
                
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>    def errors(self):</pre></li>
                
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>        &quot;&quot;&quot;Return an ErrorDict for the data provided for the form.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>        if self._errors is None:</pre></li>
                
                </ol>
              
              <ol start="172" class="context-line">
                <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>            self.full_clean()</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='173' class="post-context" id="post139756760500040">
                  
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>        return self._errors</pre></li>
                  
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>    def is_valid(self):</pre></li>
                  
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>        &quot;&quot;&quot;Return True if the form has no errors, or False otherwise.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre>        return self.is_bound and not self.errors</pre></li>
                  
                  <li onclick="toggle('pre139756760500040', 'post139756760500040')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760500040')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760500040">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;AdminAuthenticationForm bound=True, valid=True, fields=(username;password)&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/forms/forms.py</code>, line 375, in full_clean

          
            <div class="context" id="c139756760499656">
              
                <ol start="368" class="pre-context" id="pre139756760499656">
                
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>        self.cleaned_data = {}</pre></li>
                
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>        # If the form is permitted to be empty, and none of the form data has</pre></li>
                
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>        # changed from the initial data, short circuit any validation.</pre></li>
                
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>        if self.empty_permitted and not self.has_changed():</pre></li>
                
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>            return</pre></li>
                
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>        self._clean_fields()</pre></li>
                
                </ol>
              
              <ol start="375" class="context-line">
                <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>        self._clean_form()</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='376' class="post-context" id="post139756760499656">
                  
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>        self._post_clean()</pre></li>
                  
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>    def _clean_fields(self):</pre></li>
                  
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>        for name, field in self.fields.items():</pre></li>
                  
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>            # value_from_datadict() gets the data from the data dictionaries.</pre></li>
                  
                  <li onclick="toggle('pre139756760499656', 'post139756760499656')"><pre>            # Each widget type knows how to retrieve its own data, because some</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760499656')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760499656">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;AdminAuthenticationForm bound=True, valid=True, fields=(username;password)&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/forms/forms.py</code>, line 402, in _clean_form

          
            <div class="context" id="c139756760499144">
              
                <ol start="395" class="pre-context" id="pre139756760499144">
                
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>                    value = getattr(self, &#x27;clean_%s&#x27; % name)()</pre></li>
                
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>                    self.cleaned_data[name] = value</pre></li>
                
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>            except ValidationError as e:</pre></li>
                
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>                self.add_error(name, e)</pre></li>
                
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>    def _clean_form(self):</pre></li>
                
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="402" class="context-line">
                <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>            cleaned_data = self.clean()</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='403' class="post-context" id="post139756760499144">
                  
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>        except ValidationError as e:</pre></li>
                  
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>            self.add_error(None, e)</pre></li>
                  
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>            if cleaned_data is not None:</pre></li>
                  
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre>                self.cleaned_data = cleaned_data</pre></li>
                  
                  <li onclick="toggle('pre139756760499144', 'post139756760499144')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760499144')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760499144">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;AdminAuthenticationForm bound=True, valid=True, fields=(username;password)&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/forms.py</code>, line 215, in clean

          
            <div class="context" id="c139756760499912">
              
                <ol start="208" class="pre-context" id="pre139756760499912">
                
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>            self.fields[&#x27;username&#x27;].label = capfirst(self.username_field.verbose_name)</pre></li>
                
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>    def clean(self):</pre></li>
                
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>        username = self.cleaned_data.get(&#x27;username&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>        password = self.cleaned_data.get(&#x27;password&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>        if username is not None and password:</pre></li>
                
                </ol>
              
              <ol start="215" class="context-line">
                <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>            self.user_cache = authenticate(self.request, username=username, password=password)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='216' class="post-context" id="post139756760499912">
                  
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>            if self.user_cache is None:</pre></li>
                  
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>                raise self.get_invalid_login_error()</pre></li>
                  
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>                self.confirm_login_allowed(self.user_cache)</pre></li>
                  
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756760499912', 'post139756760499912')"><pre>        return self.cleaned_data</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756760499912')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756760499912">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>password</td>
                    <td class="code"><pre>&#x27;khanisa01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;AdminAuthenticationForm bound=True, valid=True, fields=(username;password)&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>username</td>
                    <td class="code"><pre>&#x27;12172001&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/__init__.py</code>, line 73, in authenticate

          
            <div class="context" id="c139756764706760">
              
                <ol start="66" class="pre-context" id="pre139756764706760">
                
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>        backend_signature = inspect.signature(backend.authenticate)</pre></li>
                
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>        try:</pre></li>
                
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>            backend_signature.bind(request, **credentials)</pre></li>
                
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>        except TypeError:</pre></li>
                
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>            # This backend doesn&#x27;t accept these credentials as arguments. Try the next one.</pre></li>
                
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>            continue</pre></li>
                
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>            user = backend.authenticate(request, **credentials)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='74' class="post-context" id="post139756764706760">
                  
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>        except PermissionDenied:</pre></li>
                  
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>            # This backend says to stop in our tracks - this user should not be allowed in at all.</pre></li>
                  
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>            break</pre></li>
                  
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>        if user is None:</pre></li>
                  
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>            continue</pre></li>
                  
                  <li onclick="toggle('pre139756764706760', 'post139756764706760')"><pre>        # Annotate the user object with the path of the backend.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756764706760')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756764706760">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>backend</td>
                    <td class="code"><pre>&lt;django.contrib.auth.backends.ModelBackend object at 0x7f1ba842da20&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>backend_path</td>
                    <td class="code"><pre>&#x27;django.contrib.auth.backends.ModelBackend&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>backend_signature</td>
                    <td class="code"><pre>&lt;Signature (request, username=None, password=None, **kwargs)&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>credentials</td>
                    <td class="code"><pre>{&#x27;password&#x27;: &#x27;khanisa01&#x27;, &#x27;username&#x27;: &#x27;12172001&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/backends.py</code>, line 42, in authenticate

          
            <div class="context" id="c139756764706888">
              
                <ol start="35" class="pre-context" id="pre139756764706888">
                
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>    def authenticate(self, request, username=None, password=None, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>        if username is None:</pre></li>
                
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>            username = kwargs.get(UserModel.USERNAME_FIELD)</pre></li>
                
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>        if username is None or password is None:</pre></li>
                
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>            return</pre></li>
                
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="42" class="context-line">
                <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>            user = UserModel._default_manager.get_by_natural_key(username)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='43' class="post-context" id="post139756764706888">
                  
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>        except UserModel.DoesNotExist:</pre></li>
                  
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>            # Run the default password hasher once to reduce the timing</pre></li>
                  
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>            # difference between an existing and a nonexistent user (#20760).</pre></li>
                  
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>            UserModel().set_password(password)</pre></li>
                  
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre139756764706888', 'post139756764706888')"><pre>            if user.check_password(password) and self.user_can_authenticate(user):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756764706888')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756764706888">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>password</td>
                    <td class="code"><pre>&#x27;khanisa01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/admin/login/?next=/admin/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.backends.ModelBackend object at 0x7f1ba842da20&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>username</td>
                    <td class="code"><pre>&#x27;12172001&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/base_user.py</code>, line 45, in get_by_natural_key

          
            <div class="context" id="c139756764706440">
              
                <ol start="38" class="pre-context" id="pre139756764706440">
                
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>        Generate a random password with the given length and given</pre></li>
                
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>        allowed_chars. The default value of allowed_chars does not have &quot;I&quot; or</pre></li>
                
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>        &quot;O&quot; or letters and digits that look similar -- just to avoid confusion.</pre></li>
                
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>        return get_random_string(length, allowed_chars)</pre></li>
                
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>    def get_by_natural_key(self, username):</pre></li>
                
                </ol>
              
              <ol start="45" class="context-line">
                <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>        return self.get(**{self.model.USERNAME_FIELD: username})</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='46' class="post-context" id="post139756764706440">
                  
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>class AbstractBaseUser(models.Model):</pre></li>
                  
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>    password = models.CharField(_(&#x27;password&#x27;), max_length=128)</pre></li>
                  
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre>    last_login = models.DateTimeField(_(&#x27;last login&#x27;), blank=True, null=True)</pre></li>
                  
                  <li onclick="toggle('pre139756764706440', 'post139756764706440')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756764706440')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756764706440">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.models.UserManager object at 0x7f1ba92cdb00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>username</td>
                    <td class="code"><pre>&#x27;12172001&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/manager.py</code>, line 85, in manager_method

          
            <div class="context" id="c139756764706632">
              
                <ol start="78" class="pre-context" id="pre139756764706632">
                
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>    def check(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="85" class="context-line">
                <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='86' class="post-context" id="post139756764706632">
                  
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>            manager_method.__name__ = method.__name__</pre></li>
                  
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>            manager_method.__doc__ = method.__doc__</pre></li>
                  
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139756764706632', 'post139756764706632')"><pre>        for name, method in inspect.getmembers(queryset_class, predicate=inspect.isfunction):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756764706632')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756764706632">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;username&#x27;: &#x27;12172001&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;get&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.models.UserManager object at 0x7f1ba92cdb00&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/query.py</code>, line 425, in get

          
            <div class="context" id="c139756764708424">
              
                <ol start="418" class="pre-context" id="pre139756764708424">
                
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>        clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>        if self.query.can_filter() and not self.query.distinct_fields:</pre></li>
                
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>            clone = clone.order_by()</pre></li>
                
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>        limit = None</pre></li>
                
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>        if not clone.query.select_for_update or connections[clone.db].features.supports_select_for_update_with_limit:</pre></li>
                
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>            limit = MAX_GET_RESULTS</pre></li>
                
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>            clone.query.set_limits(high=limit)</pre></li>
                
                </ol>
              
              <ol start="425" class="context-line">
                <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>        num = len(clone)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='426' class="post-context" id="post139756764708424">
                  
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>        if num == 1:</pre></li>
                  
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>            return clone._result_cache[0]</pre></li>
                  
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>        if not num:</pre></li>
                  
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>            raise self.model.DoesNotExist(</pre></li>
                  
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>                &quot;%s matching query does not exist.&quot; %</pre></li>
                  
                  <li onclick="toggle('pre139756764708424', 'post139756764708424')"><pre>                self.model._meta.object_name</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756764708424')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756764708424">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>clone</td>
                    <td class="code"><pre>Error in formatting: OperationalError: no such table: auth_user</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;username&#x27;: &#x27;12172001&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>limit</td>
                    <td class="code"><pre>21</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: OperationalError: no such table: auth_user</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/query.py</code>, line 269, in __len__

          
            <div class="context" id="c139756764708360">
              
                <ol start="262" class="pre-context" id="pre139756764708360">
                
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>    def __repr__(self):</pre></li>
                
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>        data = list(self[:REPR_OUTPUT_SIZE + 1])</pre></li>
                
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>        if len(data) &gt; REPR_OUTPUT_SIZE:</pre></li>
                
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>            data[-1] = &quot;...(remaining elements truncated)...&quot;</pre></li>
                
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>        return &#x27;&lt;%s %r&gt;&#x27; % (self.__class__.__name__, data)</pre></li>
                
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>    def __len__(self):</pre></li>
                
                </ol>
              
              <ol start="269" class="context-line">
                <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>        self._fetch_all()</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='270' class="post-context" id="post139756764708360">
                  
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>        return len(self._result_cache)</pre></li>
                  
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>    def __iter__(self):</pre></li>
                  
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>        The queryset iterator protocol uses three nested iterators in the</pre></li>
                  
                  <li onclick="toggle('pre139756764708360', 'post139756764708360')"><pre>        default case:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756764708360')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756764708360">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: OperationalError: no such table: auth_user</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/query.py</code>, line 1308, in _fetch_all

          
            <div class="context" id="c139756765451720">
              
                <ol start="1301" class="pre-context" id="pre139756765451720">
                
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>        c._known_related_objects = self._known_related_objects</pre></li>
                
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>        c._iterable_class = self._iterable_class</pre></li>
                
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>        c._fields = self._fields</pre></li>
                
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>        return c</pre></li>
                
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>    def _fetch_all(self):</pre></li>
                
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>        if self._result_cache is None:</pre></li>
                
                </ol>
              
              <ol start="1308" class="context-line">
                <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>            self._result_cache = list(self._iterable_class(self))</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1309' class="post-context" id="post139756765451720">
                  
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>        if self._prefetch_related_lookups and not self._prefetch_done:</pre></li>
                  
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>            self._prefetch_related_objects()</pre></li>
                  
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>    def _next_is_sticky(self):</pre></li>
                  
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139756765451720', 'post139756765451720')"><pre>        Indicate that the next filter call and the one following that should</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756765451720')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756765451720">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: OperationalError: no such table: auth_user</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/query.py</code>, line 53, in __iter__

          
            <div class="context" id="c139756765452168">
              
                <ol start="46" class="pre-context" id="pre139756765452168">
                
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>    def __iter__(self):</pre></li>
                
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        queryset = self.queryset</pre></li>
                
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        db = queryset.db</pre></li>
                
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        compiler = queryset.query.get_compiler(using=db)</pre></li>
                
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        # Execute the query. This will also fill compiler.select, klass_info,</pre></li>
                
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        # and annotations.</pre></li>
                
                </ol>
              
              <ol start="53" class="context-line">
                <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='54' class="post-context" id="post139756765452168">
                  
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        select, klass_info, annotation_col_map = (compiler.select, compiler.klass_info,</pre></li>
                  
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>                                                  compiler.annotation_col_map)</pre></li>
                  
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        model_cls = klass_info[&#x27;model&#x27;]</pre></li>
                  
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        select_fields = klass_info[&#x27;select_fields&#x27;]</pre></li>
                  
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        model_fields_start, model_fields_end = select_fields[0], select_fields[-1] + 1</pre></li>
                  
                  <li onclick="toggle('pre139756765452168', 'post139756765452168')"><pre>        init_list = [f[0].target.attname</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756765452168')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756765452168">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>compiler</td>
                    <td class="code"><pre>&lt;django.db.models.sql.compiler.SQLCompiler object at 0x7f1ba842d2e8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>db</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>queryset</td>
                    <td class="code"><pre>Error in formatting: OperationalError: no such table: auth_user</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.query.ModelIterable object at 0x7f1ba842d198&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/sql/compiler.py</code>, line 1156, in execute_sql

          
            <div class="context" id="c139756764707208">
              
                <ol start="1149" class="pre-context" id="pre139756764707208">
                
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>                return</pre></li>
                
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>        if chunked_fetch:</pre></li>
                
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>            cursor = self.connection.chunked_cursor()</pre></li>
                
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>            cursor = self.connection.cursor()</pre></li>
                
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="1156" class="context-line">
                <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>            cursor.execute(sql, params)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1157' class="post-context" id="post139756764707208">
                  
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>        except Exception:</pre></li>
                  
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>            # Might fail for server-side cursors (e.g. connection closed)</pre></li>
                  
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>            cursor.close()</pre></li>
                  
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>            raise</pre></li>
                  
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756764707208', 'post139756764707208')"><pre>        if result_type == CURSOR:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756764707208')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756764707208">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunk_size</td>
                    <td class="code"><pre>100</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked_fetch</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;12172001&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>result_type</td>
                    <td class="code"><pre>&#x27;multi&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.sql.compiler.SQLCompiler object at 0x7f1ba842d2e8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password&quot;, &quot;auth_user&quot;.&quot;last_login&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_superuser&quot;, &quot;auth_user&quot;.&quot;username&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;first_name&quot;, &quot;auth_user&quot;.&quot;last_name&quot;, &quot;auth_user&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_staff&quot;, &quot;auth_user&quot;.&quot;is_active&quot;, &quot;auth_user&quot;.&quot;date_joined&quot; &#x27;
 &#x27;FROM &quot;auth_user&quot; WHERE &quot;auth_user&quot;.&quot;username&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py</code>, line 98, in execute

          
            <div class="context" id="c139756763898760">
              
                <ol start="91" class="pre-context" id="pre139756763898760">
                
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre>class CursorDebugWrapper(CursorWrapper):</pre></li>
                
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre>    # XXX callproc isn&#x27;t instrumented at this time.</pre></li>
                
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre>        with self.debug_sql(sql, params, use_last_executed_query=True):</pre></li>
                
                </ol>
              
              <ol start="98" class="context-line">
                <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre>            return super().execute(sql, params)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='99' class="post-context" id="post139756763898760">
                  
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre>        with self.debug_sql(sql, param_list, many=True):</pre></li>
                  
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre>            return super().executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763898760', 'post139756763898760')"><pre>    @contextmanager</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756763898760')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756763898760">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.backends.utils.CursorDebugWrapper&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;12172001&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password&quot;, &quot;auth_user&quot;.&quot;last_login&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_superuser&quot;, &quot;auth_user&quot;.&quot;username&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;first_name&quot;, &quot;auth_user&quot;.&quot;last_name&quot;, &quot;auth_user&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_staff&quot;, &quot;auth_user&quot;.&quot;is_active&quot;, &quot;auth_user&quot;.&quot;date_joined&quot; &#x27;
 &#x27;FROM &quot;auth_user&quot; WHERE &quot;auth_user&quot;.&quot;username&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py</code>, line 66, in execute

          
            <div class="context" id="c139756763898888">
              
                <ol start="59" class="pre-context" id="pre139756763898888">
                
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>            elif kparams is None:</pre></li>
                
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>                return self.cursor.callproc(procname, params)</pre></li>
                
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>                params = params or ()</pre></li>
                
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>                return self.cursor.callproc(procname, params, kparams)</pre></li>
                
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                </ol>
              
              <ol start="66" class="context-line">
                <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>        return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='67' class="post-context" id="post139756763898888">
                  
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>        return self._execute_with_wrappers(sql, param_list, many=True, executor=self._executemany)</pre></li>
                  
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>    def _execute_with_wrappers(self, sql, params, many, executor):</pre></li>
                  
                  <li onclick="toggle('pre139756763898888', 'post139756763898888')"><pre>        context = {&#x27;connection&#x27;: self.db, &#x27;cursor&#x27;: self}</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756763898888')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756763898888">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;12172001&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password&quot;, &quot;auth_user&quot;.&quot;last_login&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_superuser&quot;, &quot;auth_user&quot;.&quot;username&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;first_name&quot;, &quot;auth_user&quot;.&quot;last_name&quot;, &quot;auth_user&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_staff&quot;, &quot;auth_user&quot;.&quot;is_active&quot;, &quot;auth_user&quot;.&quot;date_joined&quot; &#x27;
 &#x27;FROM &quot;auth_user&quot; WHERE &quot;auth_user&quot;.&quot;username&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py</code>, line 75, in _execute_with_wrappers

          
            <div class="context" id="c139756763898632">
              
                <ol start="68" class="pre-context" id="pre139756763898632">
                
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>    def executemany(self, sql, param_list):</pre></li>
                
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>        return self._execute_with_wrappers(sql, param_list, many=True, executor=self._executemany)</pre></li>
                
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre></pre></li>
                
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>    def _execute_with_wrappers(self, sql, params, many, executor):</pre></li>
                
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>        context = {&#x27;connection&#x27;: self.db, &#x27;cursor&#x27;: self}</pre></li>
                
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>        for wrapper in reversed(self.db.execute_wrappers):</pre></li>
                
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>            executor = functools.partial(wrapper, executor)</pre></li>
                
                </ol>
              
              <ol start="75" class="context-line">
                <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>        return executor(sql, params, many, context)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='76' class="post-context" id="post139756763898632">
                  
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                  
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>        with self.db.wrap_database_errors:</pre></li>
                  
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>            if params is None:</pre></li>
                  
                  <li onclick="toggle('pre139756763898632', 'post139756763898632')"><pre>                # params default might be backend specific.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756763898632')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756763898632">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;connection&#x27;: &lt;django.db.backends.sqlite3.base.DatabaseWrapper object at 0x7f1ba85509e8&gt;,
 &#x27;cursor&#x27;: &lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>executor</td>
                    <td class="code"><pre>&lt;bound method CursorWrapper._execute of &lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>many</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;12172001&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password&quot;, &quot;auth_user&quot;.&quot;last_login&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_superuser&quot;, &quot;auth_user&quot;.&quot;username&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;first_name&quot;, &quot;auth_user&quot;.&quot;last_name&quot;, &quot;auth_user&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_staff&quot;, &quot;auth_user&quot;.&quot;is_active&quot;, &quot;auth_user&quot;.&quot;date_joined&quot; &#x27;
 &#x27;FROM &quot;auth_user&quot; WHERE &quot;auth_user&quot;.&quot;username&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py</code>, line 84, in _execute

          
            <div class="context" id="c139756763898696">
              
                <ol start="77" class="pre-context" id="pre139756763898696">
                
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="84" class="context-line">
                <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>                return self.cursor.execute(sql, params)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='85' class="post-context" id="post139756763898696">
                  
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                  
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>        with self.db.wrap_database_errors:</pre></li>
                  
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre>            return self.cursor.executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre139756763898696', 'post139756763898696')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756763898696')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756763898696">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;django.db.backends.sqlite3.base.DatabaseWrapper object at 0x7f1ba85509e8&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;12172001&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password&quot;, &quot;auth_user&quot;.&quot;last_login&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_superuser&quot;, &quot;auth_user&quot;.&quot;username&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;first_name&quot;, &quot;auth_user&quot;.&quot;last_name&quot;, &quot;auth_user&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_staff&quot;, &quot;auth_user&quot;.&quot;is_active&quot;, &quot;auth_user&quot;.&quot;date_joined&quot; &#x27;
 &#x27;FROM &quot;auth_user&quot; WHERE &quot;auth_user&quot;.&quot;username&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/utils.py</code>, line 90, in __exit__

          
            <div class="context" id="c139756763898248">
              
                <ol start="83" class="pre-context" id="pre139756763898248">
                
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>            db_exc_type = getattr(self.wrapper.Database, dj_exc_type.__name__)</pre></li>
                
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>            if issubclass(exc_type, db_exc_type):</pre></li>
                
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>                dj_exc_value = dj_exc_type(*exc_value.args)</pre></li>
                
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>                # Only set the &#x27;errors_occurred&#x27; flag for errors that may make</pre></li>
                
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>                # the connection unusable.</pre></li>
                
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>                if dj_exc_type not in (DataError, IntegrityError):</pre></li>
                
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>                    self.wrapper.errors_occurred = True</pre></li>
                
                </ol>
              
              <ol start="90" class="context-line">
                <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>                raise dj_exc_value.with_traceback(traceback) from exc_value</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='91' class="post-context" id="post139756763898248">
                  
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>    def __call__(self, func):</pre></li>
                  
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>        # Note that we are intentionally not using @wraps here for performance</pre></li>
                  
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>        # reasons. Refs #21109.</pre></li>
                  
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>        def inner(*args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139756763898248', 'post139756763898248')"><pre>            with self:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756763898248')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756763898248">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>db_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;sqlite3.OperationalError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.utils.OperationalError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_value</td>
                    <td class="code"><pre>OperationalError(&#x27;no such table: auth_user&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;sqlite3.OperationalError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_value</td>
                    <td class="code"><pre>OperationalError(&#x27;no such table: auth_user&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.utils.DatabaseErrorWrapper object at 0x7f1ba85613c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>traceback</td>
                    <td class="code"><pre>&lt;traceback object at 0x7f1ba83fba88&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py</code>, line 84, in _execute

          
            <div class="context" id="c139756763593352">
              
                <ol start="77" class="pre-context" id="pre139756763593352">
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="84" class="context-line">
                <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>                return self.cursor.execute(sql, params)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='85' class="post-context" id="post139756763593352">
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>        with self.db.wrap_database_errors:</pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre>            return self.cursor.executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre139756763593352', 'post139756763593352')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756763593352')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756763593352">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;django.db.backends.sqlite3.base.DatabaseWrapper object at 0x7f1ba85509e8&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;12172001&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0x7f1ba81097b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password&quot;, &quot;auth_user&quot;.&quot;last_login&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_superuser&quot;, &quot;auth_user&quot;.&quot;username&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;first_name&quot;, &quot;auth_user&quot;.&quot;last_name&quot;, &quot;auth_user&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_staff&quot;, &quot;auth_user&quot;.&quot;is_active&quot;, &quot;auth_user&quot;.&quot;date_joined&quot; &#x27;
 &#x27;FROM &quot;auth_user&quot; WHERE &quot;auth_user&quot;.&quot;username&quot; = %s LIMIT 21&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/sqlite3/base.py</code>, line 413, in execute

          
            <div class="context" id="c139756763875784">
              
                <ol start="406" class="pre-context" id="pre139756763875784">
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    This fixes it -- but note that if you want to use a literal &quot;%s&quot; in a query,</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    you&#x27;ll need to use &quot;%%s&quot;.</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    def execute(self, query, params=None):</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        if params is None:</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>            return Database.Cursor.execute(self, query)</pre></li>
                
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        query = self.convert_query(query)</pre></li>
                
                </ol>
              
              <ol start="413" class="context-line">
                <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        return Database.Cursor.execute(self, query, params)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='414' class="post-context" id="post139756763875784">
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    def executemany(self, query, param_list):</pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        query = self.convert_query(query)</pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>        return Database.Cursor.executemany(self, query, param_list)</pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139756763875784', 'post139756763875784')"><pre>    def convert_query(self, query):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139756763875784')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139756763875784">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(&#x27;12172001&#x27;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>(&#x27;SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password&quot;, &quot;auth_user&quot;.&quot;last_login&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_superuser&quot;, &quot;auth_user&quot;.&quot;username&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;first_name&quot;, &quot;auth_user&quot;.&quot;last_name&quot;, &quot;auth_user&quot;.&quot;email&quot;, &#x27;
 &#x27;&quot;auth_user&quot;.&quot;is_staff&quot;, &quot;auth_user&quot;.&quot;is_active&quot;, &quot;auth_user&quot;.&quot;date_joined&quot; &#x27;
 &#x27;FROM &quot;auth_user&quot; WHERE &quot;auth_user&quot;.&quot;username&quot; = ? LIMIT 21&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x7f1ba844eb88&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="OperationalError at /admin/login/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://127.0.0.1:8000/admin/login/?next=/admin/

Django Version: 3.1.2
Python Version: 3.6.9
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;catalog.apps.CatalogConfig&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/sqlite3/base.py", line 413, in execute
    return Database.Cursor.execute(self, query, params)

The above exception (no such table: auth_user) was the direct cause of the following exception:
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/core/handlers/exception.py", line 47, in inner
    response = get_response(request)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/core/handlers/base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/admin/sites.py", line 410, in login
    return LoginView.as_view(**defaults)(request)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/utils/decorators.py", line 43, in _wrapper
    return bound_method(*args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/views/decorators/debug.py", line 89, in sensitive_post_parameters_wrapper
    return view(request, *args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/utils/decorators.py", line 43, in _wrapper
    return bound_method(*args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/utils/decorators.py", line 130, in _wrapped_view
    response = view_func(request, *args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/utils/decorators.py", line 43, in _wrapper
    return bound_method(*args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/views.py", line 63, in dispatch
    return super().dispatch(request, *args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/views/generic/edit.py", line 141, in post
    if form.is_valid():
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/forms/forms.py", line 177, in is_valid
    return self.is_bound and not self.errors
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/forms/forms.py", line 172, in errors
    self.full_clean()
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/forms/forms.py", line 375, in full_clean
    self._clean_form()
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/forms/forms.py", line 402, in _clean_form
    cleaned_data = self.clean()
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/forms.py", line 215, in clean
    self.user_cache = authenticate(self.request, username=username, password=password)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/__init__.py", line 73, in authenticate
    user = backend.authenticate(request, **credentials)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/backends.py", line 42, in authenticate
    user = UserModel._default_manager.get_by_natural_key(username)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/contrib/auth/base_user.py", line 45, in get_by_natural_key
    return self.get(**{self.model.USERNAME_FIELD: username})
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/query.py", line 425, in get
    num = len(clone)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/query.py", line 269, in __len__
    self._fetch_all()
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/query.py", line 1308, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/query.py", line 53, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 1156, in execute_sql
    cursor.execute(sql, params)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py", line 98, in execute
    return super().execute(sql, params)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/home/khanisa/.local/lib/python3.6/site-packages/django/db/backends/sqlite3/base.py", line 413, in execute
    return Database.Cursor.execute(self, query, params)

Exception Type: OperationalError at /admin/login/
Exception Value: no such table: auth_user
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>next</td>
            <td class="code"><pre>&#x27;/admin/&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>csrfmiddlewaretoken</td>
            <td class="code"><pre>&#x27;hmIdIqgUKFSV7iDeAE51hziaquQSr8hD3QxBHv00zBBwEqYIJB4tMjyadmIqwnVD&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>username</td>
            <td class="code"><pre>&#x27;12172001&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>password</td>
            <td class="code"><pre>&#x27;khanisa01&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>next</td>
            <td class="code"><pre>&#x27;/admin/&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>csrftoken</td>
            <td class="code"><pre>&#x27;O3kcFmE71TOlb3A8Nb1jsWKwff6TRHjvAx9AErodQPxWIbVCW80LXG0w27YrWWXv&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CLUTTER_IM_MODULE</td>
          <td class="code"><pre>&#x27;xim&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;138&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/x-www-form-urlencoded&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE</td>
          <td class="code"><pre>&#x27;O3kcFmE71TOlb3A8Nb1jsWKwff6TRHjvAx9AErodQPxWIbVCW80LXG0w27YrWWXv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;locallibrary.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#x27;stderr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#x27;JS ERROR;JS LOG&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_TERMINAL_SCREEN</td>
          <td class="code"><pre>&#x27;/org/gnome/Terminal/screen/a38c7010_b835_42f4_9ed2_0920ddcdd369&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_TERMINAL_SERVICE</td>
          <td class="code"><pre>&#x27;:1.71&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#x27;/run/user/1000/gnupg/S.gpg-agent:0:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/khanisa&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_LANGUAGE</td>
          <td class="code"><pre>&#x27;ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#x27;keep-alive&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_COOKIE</td>
          <td class="code"><pre>&#x27;csrftoken=O3kcFmE71TOlb3A8Nb1jsWKwff6TRHjvAx9AErodQPxWIbVCW80LXG0w27YrWWXv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ORIGIN</td>
          <td class="code"><pre>&#x27;http://127.0.0.1:8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_REFERER</td>
          <td class="code"><pre>&#x27;http://127.0.0.1:8000/admin/login/?next=/admin/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_UPGRADE_INSECURE_REQUESTS</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:81.0) Gecko/20100101 Firefox/81.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IM_CONFIG_PHASE</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;ru_RU.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;kk_KZ.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;kk_KZ.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;kk_KZ.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;kk_KZ.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;kk_KZ.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;kk_KZ.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;kk_KZ.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;kk_KZ.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;kk_KZ.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;khanisa&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>OLDPWD</td>
          <td class="code"><pre>&#x27;/home/khanisa/Django01/debut_project/locallibrary&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/khanisa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/admin/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/khanisa/Django01/debut_project/locallibrary/locallibrary&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT4_IM_MODULE</td>
          <td class="code"><pre>&#x27;xim&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;xim&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;next=/admin/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/khanisa-VirtualBox:@/tmp/.ICE-unix/849,unix/khanisa-VirtualBox:/tmp/.ICE-unix/849&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_PID</td>
          <td class="code"><pre>&#x27;967&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TEXTDOMAIN</td>
          <td class="code"><pre>&#x27;im-config&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TEXTDOMAINDIR</td>
          <td class="code"><pre>&#x27;/usr/share/locale/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;Asia/Almaty&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;khanisa&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;khanisa&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VTE_VERSION</td>
          <td class="code"><pre>&#x27;5202&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/gdm/Xauthority&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SEAT</td>
          <td class="code"><pre>&#x27;seat0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_ID</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_VTNR</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>_</td>
          <td class="code"><pre>&#x27;/usr/bin/python3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;UTF-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7f1ba84c7c18&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>locallibrary.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/khanisa/Django01/debut_project/locallibrary/locallibrary&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,
             &#x27;HOST&#x27;: &#x27;&#x27;,
             &#x27;NAME&#x27;: PosixPath(&#x27;/home/khanisa/Django01/debut_project/locallibrary/locallibrary/db.sqlite3&#x27;),
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_HASHING_ALGORITHM</td>
          <td class="code"><pre>&#x27;sha256&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;catalog.apps.CatalogConfig&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian BokmÃ¥l&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;locallibrary.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;locallibrary.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;Asia/Almaty&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;locallibrary.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>
™¡n•åv      _¦„Ú_¦„ÛBLÂö       <    ~1604747992,:http://127.0.0.1:8000/admin/login/?next=/admin/ necko:classified 1 strongly-framed 1 request-method POST request-Cookie /GjjXsDCXiXeta97yABiXiYngjE= response-head HTTP/1.1 500 Internal Server Error
Date: Sat, 07 Nov 2020 11:28:27 GMT
Server: WSGIServer/0.2 CPython/3.6.9
Content-Type: text/html
X-Frame-Options: DENY
Content-Length: 224859
Vary: Cookie
X-Content-Type-Options: nosniff
Referrer-Policy: same-origin
 original-response-headers Date: Sat, 07 Nov 2020 11:28:27 GMT
Server: WSGIServer/0.2 CPython/3.6.9
Content-Type: text/html
X-Frame-Options: DENY
Content-Length: 224859
Vary: Cookie
X-Content-Type-Options: nosniff
Referrer-Policy: same-origin
 ctid 1 uncompressed-len 0 net-response-time-onstart 310 net-response-time-onstop 334  n[